@page "/"
@using System.Net
@using System.Net.Sockets
@using System.Text
@inject IJSRuntime JS

@code
{

}
<PageTitle>Home</PageTitle>
<link rel="stylesheet" href="styles2.css" />

<h2>IP config</h2>
<InputText @bind-Value="IP"/>
<button @onclick="SaveIP">Save IP</button>
<div>Robot IP: @(serv.IPAddress == null ? "NONE" : serv.IPAddress.ToString())</div>
<div>Connection status: @(serv.connected ? "Connected!" : "No connection!")</div>

<button @onclick="Test">Test</button>

<h2>Button control</h2>
<div>Distance: @serv.distance</div>
<table class="noselect">
    <tr>
        <td>

        </td>
        <td>
            <button style="width:100px; height:100px;" 
            @onmousedown="Up" @ontouchstart:preventDefault="true" @ontouchstart="Up" 
            @onmouseup="Stop" @ontouchend:preventDefault="true" @ontouchend="Stop">UP</button>
        </td>
        <td>

        </td>
    </tr>
    <tr>
        <td>
            <button style="width:100px; height:100px;"
            @onmousedown="Left" @ontouchstart="Left" @ontouchstart:preventDefault="true"
                    @onmouseup="Stop" @ontouchend="Stop" @ontouchend:preventDefault="true">LEFT</button>
        </td>
        <td>
            <button style="width:100px; height:100px;" @onmouseup="Stop">STOP</button>
        </td>
        <td>
            <button style="width:100px; height:100px;" 
            @onmousedown="Right" @ontouchstart="Right" @ontouchstart:preventDefault="true"
            @onmouseup="Stop" @ontouchend="Stop" @ontouchend:preventDefault="true">RIGHT</button>
        </td>
    </tr>
    <tr>
        <td>
        </td>
        <td>
            <button style="width:100px; height:100px;" 
            @onmousedown="Down" @ontouchstart="Down" @ontouchstart:preventDefault="true"  
            @onmouseup="Stop" @ontouchend="Stop">DOWN</button>
        </td>
        <td>
        </td>
    </tr>
</table>





<script>
    //document.getElementById("joystick").addEventListener("dragstart", function(e) { var img = document.createElement("img"); img.src = "drag.png"; e.dataTransfer.setDragImage(img, 26, 26); }, false);
</script>
@code
{
    public string IP = "100.64.0.100";
    public string dst = "NULL";
    public void SaveIP()
    {
        try
        {
            serv.IPAddress = IPAddress.Parse(IP);
            serv.Test();
        }
        catch(Exception e)
        {
            JS.InvokeVoidAsync("alert", "Wrong IP format!");   
        }
    }

    public void StopJoystick(MouseEventArgs e)
    {
        if (e.Buttons == 1) serv.Stop();
        
    }

        /*
    public void LogA()
    {
    serv.Test();
        }

    public void LogB()
        {
    Console.WriteLine("EventB");
    }

    public void Stop()
    {
    //SendCommand("LEGOCTRL#STOP");
    }



    */

    public void Test()
    {
        serv.Test();
    }

    public void Up()
    {
        serv.Up();
    }

    public void Left()
    {
        serv.Left();
    }

    public void Right()
    {
        serv.Right();
    }

    public void Down()
    {
        serv.Down();
    }

    public void Stop()
    {
        serv.Stop();
    }

    //UI update timer 400 ms
    protected override void OnInitialized()
    {
        System.Threading.Timer timer;
        timer = new System.Threading.Timer(async _ =>
        {
            await InvokeAsync(StateHasChanged);
        }, null, 0, 250);
    }
}