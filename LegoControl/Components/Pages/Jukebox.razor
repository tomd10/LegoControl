@page "/Jukebox"
@using System.Net
@using System.Net.Sockets
@using System.Text
@inject IJSRuntime JS
<PageTitle>Jukebox</PageTitle>
<link rel="stylesheet" href="/styles2.css" />







<select @bind="songName">
    @if(serv.songs != null && serv.songs.Count > 0)
    {
        @foreach(string song in serv.songs)
        {
            <option value="@song">
                @(song.Substring(0, song.Length - 4).Split('_')[1].Replace('&', ' ') + " (" + song.Substring(0, song.Length - 4).Split('_')[0].Replace('&', ' ') + ")")
            </option>
        }
    }
</select>
<button @onclick="Play">Play song</button>

<br />
<input type="range" min="1" max="100" value="30" style="width: 80%; max-width: 500px; margin-top: 2em" id="slider">

<br />
<br />
<InputNumber min="20" max="20000" @bind-Value="frequency"></InputNumber> <button @onclick="PlayTone">Play tone</button>

<br />
<br />
<button @onclick="Mute">Mute</button>
@code
{
    public static SingletonService s;
    public string songName = "";
    public int frequency = 440;

    public void Play()
    {
        if (songName != "" && songName != null)
        {
            serv.Play(songName);
        }
    }

    public void PlayTone()
    {
        serv.PlayTone(frequency);
    }

    public void Mute()
    {
        Console.WriteLine(songName);
        serv.Mute();

    }

    //UI update timer 400 ms
    protected override void OnInitialized()
    {
        s = serv;
        System.Threading.Timer timer;
        timer = new System.Threading.Timer(async _ =>
        {
            await InvokeAsync(StateHasChanged);
        }, null, 0, 250);
    }

    //Call from JS to C#
    private IJSObjectReference? module;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import",
                "./Components/Pages/Jukebox.razor.js");

            await module.InvokeVoidAsync("addHandlers");
        }
    }

    [JSInvokable]
    public static void SetVolume(int volume)
    {
        s.SetVolume(volume);
    }

}
